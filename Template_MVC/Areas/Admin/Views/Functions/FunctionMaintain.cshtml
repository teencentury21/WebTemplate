
@{
    ViewBag.Title = "Function Maintain";
}

<div id="app" class="container tab-pane active">
    <div class="container mt-3">
        <h2>Function Management</h2>
        <hr>
        <div class="row mb-3">
            <div class="col-4">
                <input id="input_Search" type="text" class="form-control" placeholder="Function name">
            </div>
            <div class="col-2">
                <button class="btn btn-primary" v-on:click="fetchFunctions()">Search</button>
            </div>
            <div class="col-6 text-end">
                <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#add-func-modal" v-on:click="AddFunctions()">New Function</button>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Function ID</th>
                    <th>Name</th>
                    <th>Parent function</th>
                    <th>Description</th>
                    <th>Editor</th>
                    <th>Created date</th>
                    <th>Update date</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="func in functions" :key="func.function_id">
                    <td>{{ func.function_id }}</td>
                    <td>{{ func.function_name }}</td>
                    <td>{{ func.parent_function_id }}</td>
                    <td>{{ func.function_description }}</td>
                    <td>{{ func.editor }}</td>
                    <td>{{ func.cdt | formatDateTime }}</td>
                    <td>{{ func.udt | formatDateTime }}</td>
                    <td>
                        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#edit-func-modal" v-on:click="EditFunctions(func)">Edit</button>
                        <button class="btn btn-danger btn-sm" v-on:click="DeleteFunctions(func)">Delete</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- Add Functions-->
    <div id="add-func-modal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Function</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="add-function_name">Function name :</label>
                        <input type="text" class="form-control" id="add-function_name">
                    </div>
                    @*<div class="form-group">
                            <label for="add-parent_function_id">Parent function name:</label>
                            <input type="text" class="form-control" id="add-parent_function_id">
                        </div>*@
                    <div class="form-group">
                        <label for="add-function_description">Description :</label>
                        <input type="text" class="form-control" id="add-function_description">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" v-on:click="InsertFunctions()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Edit Functions-->
    <div id="edit-func-modal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit {{selectedFunc.function_id}} / {{selectedFunc.function_name}}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="edit-function_name">Function name :</label>
                        <input type="text" class="form-control" id="edit-function_name" v-model="selectedFunc.function_name">
                    </div>
                    <div class="form-group">
                        <label for="edit-function_description">Description :</label>
                        <input type="text" class="form-control" id="edit-function_description" v-model="selectedFunc.function_description">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" v-on:click="UpdateFunctions(selectedFunc)">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {

    });

    new Vue({
        el: '#app',
        data: {
            functions: [],
            selectedFunc: {},
            searchText: $("#input_Search").val(),
            insertFunc: {
                function_name: "",
                parent_function_id: 0,
                function_description: ""
            }
        },
        filters: {
            formatDateTime: function (value) {
                const date = new Date(value);
                const year = date.getFullYear();
                const month = ('0' + (date.getMonth() + 1)).slice(-2);
                const day = ('0' + date.getDate()).slice(-2);
                const hours = ('0' + date.getHours()).slice(-2);
                const minutes = ('0' + date.getMinutes()).slice(-2);
                const seconds = ('0' + date.getSeconds()).slice(-2);
                return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;
            }
        },
        created() {
            // alert('Hello');
        },
        mounted() {
            // this.fetchUsers();
        },
        methods: {
            fetchFunctions() {
                var search = $("#input_Search").val();
                axios.post('@Url.Content("~/Admin/Functions/QueryFunctions")', {
                    input: search
                })
                .then(response => {
                    this.functions = response.data;
                    if (response.data.length == 0) {
                        alert("Function: " + search + " not found");
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            },
            EditFunctions(func) {
                // Set the selected user.
                this.selectedFunc = func;
                console.log(this.selectedFunc);
            },
            UpdateFunctions(input) {
                if (confirm('Are you sure update function ' + this.selectedFunc.function_name + '?')) {
                    var inputFunc = this.functions.find(func => func.function_id === input.function_id);

                    axios.post('@Url.Content("~/Admin/Functions/UpdateFunctions")', {
                        input: inputFunc
                    })
                        .then(response => {
                            console.log(response);
                            if (response.data.isSuccess) {
                                alert('Function Update !!');
                                location.reload();
                            } else {
                                alert(response.data.Message);
                            }
                        })
                        .catch(error => {
                            console.log(error);
                        });
                } else {
                    // 取消按鈕被點擊
                    console.log('User clicked Cancel');
                }
            },
            DeleteFunctions(func) {
                if (confirm('Are you sure delete function ' + func.function_name + '?')) {
                    console.log('User clicked confirm');
                    axios.post('@Url.Content("~/Admin/Functions/DeleteFunctions")', {
                        userId: func.function_id
                    })
                        .then(response => {
                            console.log(response);
                            if (response.data.isSuccess) {
                                alert('User ' + func.function_name + ' deleted !!');
                                location.reload();
                            } else {
                                alert(response.data.Message);
                            }
                        })
                        .catch(error => {
                            console.log(error);
                        });
                }
                else {
                    // 取消按鈕被點擊
                    console.log('User clicked Cancel');
                }
            },
            AddFunctions() {

            },
            InsertFunctions() {

                this.insertFunc.function_name = $("#add-function_name").val();
                // this.insertFunc.parent_function_id = $("#add-parent_function_id").val();
                this.insertFunc.function_description = $("#add-function_description").val();

                console.log(this.insertFunc);

                axios.post('@Url.Content("~/Admin/Functions/AdminAddFunctions")', {
                    input: this.insertFunc
                })
                .then(response => {
                    console.log(response);
                    if (response.data.isSuccess) {
                        alert('Add function ' + this.insertFunc.function_name + ' success !!');
                        location.reload();
                    } else {
                        alert(response.data.Message);
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            }
        }
    });
</script>
