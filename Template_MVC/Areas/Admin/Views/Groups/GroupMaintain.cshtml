
@{
    ViewBag.Title = "Group Maintain";
}

<div id="app" class="container tab-pane active">
    <div class="container mt-3">
        <h2>Group Management</h2>
        <hr>
        <div class="row mb-3">
            <div class="col-4">
                <input id="input_Search" type="text" class="form-control" placeholder="Group name">
            </div>
            <div class="col-2">
                <button class="btn btn-primary" v-on:click="fetchGroups()">Search</button>
            </div>
            <div class="col-6 text-end">
                <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#add-group-modal" v-on:click="AddGroups()">New Group</button>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Group ID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Editor</th>
                    <th>Created Date</th>
                    <th>Update Date</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="group in groups" :key="group.function_id">
                    <td>{{ group.group_id }}</td>
                    <td>{{ group.group_name }}</td>
                    <td>{{ group.group_description }}</td>
                    <td>{{ group.editor }}</td>
                    <td>{{ group.cdt | formatDateTime }}</td>
                    <td>{{ group.udt | formatDateTime }}</td>
                    <td>
                        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#edit-group-modal" v-on:click="EditGroups(group)">Edit</button>
                        <button class="btn btn-danger btn-sm" v-on:click="DeleteGroups(group)">Delete</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <!-- Add Groups-->
    <div id="add-group-modal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Group</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="add-group_name">Group name :</label>
                        <input type="text" class="form-control" id="add-group_name">
                    </div>
                    <div class="form-group">
                        <label for="add-group_description">Description :</label>
                        <input type="text" class="form-control" id="add-group_description">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" v-on:click="InsertGroups()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Edit Groups-->
    <div id="edit-group-modal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit {{selectedGroup.group_id}} / {{selectedGroup.group_name}}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="edit-group_name">Group name :</label>
                        <input type="text" class="form-control" id="edit-group_name" v-model="selectedGroup.group_name">
                    </div>
                    <div class="form-group">
                        <label for="edit-group_description">Description :</label>
                        <input type="text" class="form-control" id="edit-group_description" v-model="selectedGroup.group_description">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" v-on:click="UpdateGroups(selectedGroup)">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    new Vue({
        el: '#app',
        data: {
            groups: [],
            selectedGroup: {},            
            searchText: $("#input_Search").val(),
            insertGroup: {
                group_name: "",                
                group_description: ""
            }
        },
        filters: {
            formatDateTime: function (value) {
                const date = new Date(value);
                const year = date.getFullYear();
                const month = ('0' + (date.getMonth() + 1)).slice(-2);
                const day = ('0' + date.getDate()).slice(-2);
                const hours = ('0' + date.getHours()).slice(-2);
                const minutes = ('0' + date.getMinutes()).slice(-2);
                const seconds = ('0' + date.getSeconds()).slice(-2);
                return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;
            }
        },
        created() {
            // alert('Hello');

        },
        mounted() {
            // this.fetchUsers();

        },
        methods: {
            fetchGroups() {
                var search = $("#input_Search").val();
                axios.post('/Admin/Groups/QueryGroups', {
                    input: search
                })
                .then(response => {
                    this.groups = response.data;
                    if (response.data.length == 0) {
                        alert("Group: " + search + " not found");
                    }
                })
                .catch(error => {
                    console.log(error);
                });
            },
            EditGroups(group) {
                // Set the selected user.
                this.selectedGroup = group;
            },
            UpdateGroups(input) {
                if (confirm('Are you sure update group ' + this.selectedGroup.group_name + '?')) {
                    var inputGroup = this.groups.find(group => group.group_id === input.group_id);                                        
                    axios.post('/Admin/Groups/UpdateGroups', {
                        input: inputGroup                        
                    })
                        .then(response => {
                            console.log(response);
                            if (response.data.isSuccess) {
                                alert('Group Update !!');
                                location.reload();
                            } else {
                                alert(response.data.Message);
                            }
                        })
                        .catch(error => {
                            console.log(error);
                        });
                } else {
                    // 取消按鈕被點擊
                    console.log('User clicked Cancel');
                }
            },
            DeleteGroups(group) {
                if (confirm('Are you sure delete group ' + group.group_name + '?')) {
                    console.log('User clicked confirm');
                    axios.post('/Admin/Groups/DeleteGroups', {
                        userId: group.group_id
                    })
                        .then(response => {
                            console.log(response);
                            if (response.data.isSuccess) {
                                alert('Group ' + group.group_name + ' deleted !!');
                                location.reload();
                            } else {
                                alert(response.data.Message);
                            }
                        })
                        .catch(error => {
                            console.log(error);
                        });
                }
                else {
                    // 取消按鈕被點擊
                    console.log('User clicked Cancel');
                }
            },
            AddGroups() {

            },
            InsertGroups() {

                this.insertGroup.group_name = $("#add-group_name").val();                
                this.insertGroup.group_description = $("#add-group_description").val();

                console.log(this.insertGroup);

                axios.post('/Admin/Groups/AdminAddGroups', {
                    input: this.insertGroup
                })
                    .then(response => {
                        console.log(response);
                        if (response.data.isSuccess) {
                            alert('Add group ' + this.insertGroup.group_name + ' success !!');
                            location.reload();
                        } else {
                            alert(response.data.Message);
                        }
                    })
                    .catch(error => {
                        console.log(error);
                    });
            }
        }
    });

</script>
